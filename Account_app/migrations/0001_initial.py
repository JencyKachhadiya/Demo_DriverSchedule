# Generated by Django 4.2.1 on 2023-12-08 08:54

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('GearBox_app', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasePlant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basePlant', models.CharField(max_length=200, unique=True)),
                ('address', models.CharField(default='', max_length=255)),
                ('phone', models.CharField(default='', max_length=20)),
                ('personOnName', models.CharField(default='', max_length=25)),
                ('managerName', models.CharField(default='', max_length=25)),
                ('lat', models.CharField(default='', max_length=20)),
                ('long', models.CharField(default='', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='HolcimTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('truckNo', models.PositiveIntegerField(default=0)),
                ('shiftDate', models.DateField(default=None, null=True)),
                ('numberOfLoads', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PastTripError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tripDate', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('truckNo', models.IntegerField(default=0)),
                ('docketNumber', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('lineNumber', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('errorFromPastTrip', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('fileName', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('status', models.BooleanField(default=False)),
                ('data', models.CharField(default=' ', max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='PublicHoliday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('stateName', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='RctiErrors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientName', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('docketNumber', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('docketDate', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('errorDescription', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('fileName', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('status', models.BooleanField(default=False)),
                ('data', models.CharField(default='', max_length=1024)),
                ('errorType', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RctiExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('truckNo', models.CharField(default='', max_length=10)),
                ('docketNumber', models.CharField(default='', max_length=10)),
                ('docketDate', models.DateField()),
                ('docketYard', models.CharField(default='', max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('paidKm', models.FloatField(default=0)),
                ('invoiceQuantity', models.FloatField(default=0)),
                ('unit', models.CharField(default='', max_length=100)),
                ('unitPrice', models.FloatField(default=0)),
                ('gstPayable', models.FloatField(default=0)),
                ('totalExGST', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ReconciliationReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docketNumber', models.CharField(default='', max_length=10)),
                ('docketDate', models.DateField(blank=True, default=None, null=True)),
                ('driverId', models.PositiveIntegerField(default=0)),
                ('clientId', models.PositiveIntegerField(default=0)),
                ('truckId', models.PositiveIntegerField(default=0)),
                ('reconciliationType', models.PositiveIntegerField(default=0)),
                ('missingComponent', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('escalationType', models.CharField(default='', max_length=20)),
                ('escalationStep', models.PositiveIntegerField(default=0)),
                ('fromDriver', models.BooleanField(default=False)),
                ('fromRcti', models.BooleanField(default=False)),
                ('driverLoadAndKmCost', models.FloatField(default=0)),
                ('rctiLoadAndKmCost', models.FloatField(default=0)),
                ('driverSurchargeCost', models.FloatField(default=0)),
                ('rctiSurchargeCost', models.FloatField(default=0)),
                ('driverWaitingTimeCost', models.FloatField(default=0)),
                ('rctiWaitingTimeCost', models.FloatField(default=0)),
                ('driverTransferKmCost', models.FloatField(default=0)),
                ('rctiTransferKmCost', models.FloatField(default=0)),
                ('driverReturnKmCost', models.FloatField(default=0)),
                ('rctiReturnKmCost', models.FloatField(default=0)),
                ('driverOtherCost', models.FloatField(default=0)),
                ('rctiOtherCost', models.FloatField(default=0)),
                ('driverStandByCost', models.FloatField(default=0)),
                ('rctiStandByCost', models.FloatField(default=0)),
                ('driverLoadDeficit', models.FloatField(default=0)),
                ('rctiLoadDeficit', models.FloatField(default=0)),
                ('driverTotalCost', models.FloatField(default=0)),
                ('rctiTotalCost', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RCTI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('truckNo', models.FloatField(default=0)),
                ('docketNumber', models.CharField(default='', max_length=10)),
                ('docketDate', models.DateField()),
                ('docketYard', models.CharField(default='', max_length=255)),
                ('noOfKm', models.FloatField(default=0)),
                ('cubicMl', models.FloatField(default=0)),
                ('cubicMiAndKmsCost', models.FloatField(default=0)),
                ('destination', models.CharField(default='Not given', max_length=255)),
                ('cartageGSTPayable', models.FloatField(default=0)),
                ('cartageTotalExGST', models.FloatField(default=0)),
                ('cartageTotal', models.FloatField(default=0)),
                ('transferKM', models.FloatField(default=0)),
                ('transferKMCost', models.FloatField(default=0)),
                ('transferKMGSTPayable', models.FloatField(default=0)),
                ('transferKMTotalExGST', models.FloatField(default=0)),
                ('transferKMTotal', models.FloatField(default=0)),
                ('returnKm', models.FloatField(default=0)),
                ('returnPerKmPerCubicMeterCost', models.FloatField(default=0)),
                ('returnKmGSTPayable', models.FloatField(default=0)),
                ('returnKmTotalExGST', models.FloatField(default=0)),
                ('returnKmTotal', models.FloatField(default=0)),
                ('waitingTimeSCHED', models.FloatField(default=0)),
                ('waitingTimeSCHEDCost', models.FloatField(default=0)),
                ('waitingTimeSCHEDGSTPayable', models.FloatField(default=0)),
                ('waitingTimeSCHEDTotalExGST', models.FloatField(default=0)),
                ('waitingTimeSCHEDTotal', models.FloatField(default=0)),
                ('waitingTimeInMinutes', models.FloatField(default=0, max_length=255)),
                ('waitingTimeCost', models.FloatField(default=0)),
                ('waitingTimeGSTPayable', models.FloatField(default=0)),
                ('waitingTimeTotalExGST', models.FloatField(default=0)),
                ('waitingTimeTotal', models.FloatField(default=0)),
                ('standByNoSlot', models.FloatField(default=0)),
                ('standByPerHalfHourDuration', models.FloatField(default=0)),
                ('standByUnit', models.CharField(choices=[('minute', 'MINUTE'), ('slot', 'SLOT')], default='minute', max_length=6)),
                ('standByGSTPayable', models.FloatField(default=0)),
                ('standByTotalExGST', models.FloatField(default=0)),
                ('standByTotal', models.FloatField(default=0)),
                ('minimumLoad', models.FloatField(default=0)),
                ('loadCost', models.FloatField(default=0)),
                ('minimumLoadGSTPayable', models.FloatField(default=0)),
                ('minimumLoadTotalExGST', models.FloatField(default=0)),
                ('minimumLoadTotal', models.FloatField(default=0)),
                ('surcharge_fixed_normal', models.FloatField(default=0)),
                ('surcharge_fixed_sunday', models.FloatField(default=0)),
                ('surcharge_fixed_public_holiday', models.FloatField(default=0)),
                ('surcharge_per_cubic_meters_normal', models.FloatField(default=0)),
                ('surcharge_per_cubic_meters_sunday', models.FloatField(default=0)),
                ('surcharge_per_cubic_meters_public_holiday', models.FloatField(default=0)),
                ('surcharge_duration', models.FloatField(default=0)),
                ('surchargeUnit', models.CharField(choices=[('minute', 'MINUTE'), ('slot', 'SLOT')], default='minute', max_length=6)),
                ('surchargeGSTPayable', models.FloatField(default=0)),
                ('surchargeTotalExGST', models.FloatField(default=0)),
                ('surchargeTotal', models.FloatField(default=0)),
                ('others', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('othersCost', models.FloatField(default=0)),
                ('othersGSTPayable', models.FloatField(default=0)),
                ('othersTotalExGST', models.FloatField(default=0)),
                ('othersTotal', models.FloatField(default=0)),
                ('clientName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GearBox_app.client')),
            ],
        ),
        migrations.CreateModel(
            name='HolcimDocket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobNo', models.PositiveIntegerField(default=0)),
                ('orderNo', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(max_length=200)),
                ('ticketed', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('load', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('loadComplete', models.CharField(max_length=200)),
                ('toJob', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('timeToDepart', models.PositiveIntegerField(default=0)),
                ('onJob', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('timeToSite', models.PositiveIntegerField(default=0)),
                ('beginUnload', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('waitingTime', models.PositiveIntegerField(default=0)),
                ('endPour', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('wash', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('toPlant', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('timeOnSite', models.PositiveIntegerField(default=0)),
                ('atPlant', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('leadDistance', models.PositiveIntegerField(default=0)),
                ('returnDistance', models.PositiveIntegerField(default=0)),
                ('totalDistance', models.PositiveIntegerField(default=0)),
                ('totalTime', models.PositiveIntegerField(default=0)),
                ('waitTimeBetweenJob', models.PositiveIntegerField(default=0)),
                ('quantity', models.FloatField(default=0)),
                ('slump', models.PositiveIntegerField(default=0)),
                ('waterAdded', models.FloatField(max_length=200)),
                ('driverName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GearBox_app.driver')),
                ('tripId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account_app.holcimtrip')),
            ],
        ),
        migrations.CreateModel(
            name='DriverTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(default=False)),
                ('shiftType', models.CharField(choices=[('Day', 'Day'), ('Night', 'Night')], max_length=200)),
                ('numberOfLoads', models.FloatField(default=0)),
                ('truckNo', models.IntegerField()),
                ('shiftDate', models.DateField(default=None, null=True)),
                ('startTime', models.CharField(max_length=200)),
                ('endTime', models.CharField(max_length=200)),
                ('loadSheet', models.FileField(upload_to='static/img/finalloadSheet')),
                ('comment', models.CharField(default='None', max_length=200)),
                ('clientName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GearBox_app.client')),
                ('driverId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GearBox_app.driver')),
            ],
        ),
        migrations.CreateModel(
            name='DriverDocket',
            fields=[
                ('docketId', models.AutoField(primary_key=True, serialize=False)),
                ('shiftDate', models.DateField(default=datetime.datetime(2023, 12, 8, 8, 54, 38, 643586, tzinfo=datetime.timezone.utc), null=True)),
                ('docketNumber', models.IntegerField()),
                ('docketFile', models.FileField(upload_to='static/img/docketFiles')),
                ('noOfKm', models.FloatField(default=0)),
                ('transferKM', models.FloatField(default=0)),
                ('returnToYard', models.BooleanField(default=False)),
                ('tippingToYard', models.BooleanField(default=False)),
                ('returnQty', models.FloatField(default=0)),
                ('returnKm', models.FloatField(default=0)),
                ('waitingTimeStart', models.CharField(max_length=200)),
                ('waitingTimeEnd', models.CharField(max_length=200)),
                ('totalWaitingInMinute', models.FloatField(default=0)),
                ('surcharge_duration', models.FloatField(default=0)),
                ('cubicMl', models.FloatField(default=0)),
                ('standByStartTime', models.CharField(max_length=200)),
                ('standByEndTime', models.CharField(max_length=200)),
                ('standBySlot', models.PositiveIntegerField(default=0, null=True)),
                ('minimumLoad', models.FloatField(default=0)),
                ('others', models.FloatField(default=0)),
                ('comment', models.CharField(default='None', max_length=255, null=True)),
                ('basePlant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account_app.baseplant')),
                ('surcharge_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GearBox_app.surcharge')),
                ('tripId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account_app.drivertrip')),
            ],
            options={
                'unique_together': {('docketNumber', 'shiftDate', 'tripId')},
            },
        ),
    ]
